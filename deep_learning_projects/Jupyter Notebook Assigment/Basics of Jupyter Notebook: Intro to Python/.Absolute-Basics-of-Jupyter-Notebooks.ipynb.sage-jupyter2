{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-a4856695-cd5e-46ff-a4c2-d6d885216878.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"last_ipynb_save":1724680384107,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"704ab6","input":"","pos":24,"state":"done","type":"cell"}
{"cell_type":"code","id":"3707a5","input":"from unidecode import unidecode\ntext_string = \"Boris Villazón\"\nunidecode(text_string)","kernel":"python3","metadata":{"jupyter":{}},"pos":20,"state":"done","type":"cell"}
{"cell_type":"code","id":"418f00","input":"import math\ndef get_circumference(r):\n    return math.pi * r ** 2\n\nget_circumference(5)","kernel":"python3","metadata":{"jupyter":{}},"pos":15,"state":"done","type":"cell"}
{"cell_type":"code","id":"4f6a55","input":"# This is a comment in Python: it is prefaced by the # symbol.\nprint(\"Hello, world!\")","kernel":"python3","metadata":{"jupyter":{}},"pos":9,"state":"done","type":"cell"}
{"cell_type":"code","id":"53c551","input":"some_variable = \"Hello world!\"\nsome_variable","kernel":"python3","metadata":{"jupyter":{}},"pos":11,"state":"done","type":"cell"}
{"cell_type":"code","id":"8a160e","input":"for counter in [1,2,3,4]:\n    print(counter)","kernel":"python3","metadata":{"jupyter":{}},"pos":13,"state":"done","type":"cell"}
{"cell_type":"code","id":"cd68a7","input":"import sys\n!{sys.executable} -m pip install unidecode","kernel":"python3","metadata":{"jupyter":{}},"pos":19,"state":"done","type":"cell"}
{"cell_type":"code","id":"f3fe7d","input":"from unidecode import unidecode\ntext_string = \"Boris Villazón\"\nunidecode(text_string)","kernel":"python3","metadata":{"jupyter":{}},"pos":17,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"00abb6","input":"See how the result prints underneath the cell? The notebook is simply reproducing the effects of a Python interpreter (like iDLE), because -- well, because the kernel is a Python interpreter.\n\n![interp](compi.png)\n\nHere is more `Python` basic code in the cell below. Remember to run it by selecting the option `Run` on the toolbar.","pos":10,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0f3865","input":"But it's not just coding and stats that benefit from the notebook form! Long-form journalism and storytelling with data are great use-cases for the Jupyter Notebook.\n\nHave a look at [Brian Keegan's notebook on analyzing the Bechdel Test](http://nbviewer.jupyter.org/github/brianckeegan/Bechdel/blob/master/Bechdel_test.ipynb), an informal cultural observation about the speaking roles of female characters in films. Ostensibly about scraping data and analyzing it, Keegan also makes the point that \"Data Journalism should emulate the openness of science,\" and uses his notebook to prove it.\n\nAnd he's not wrong! Take a look at Christine Zang's fascinating post on *Source* that [shows all of the work that went into the data portion](https://source.opennews.org/articles/how-we-found-new-patterns-la-homeless-arrest/) of her [recent front-page *Los Angeles Times* story about rising arrests of homeless people](http://www.latimes.com/local/politics/la-me-homeless-arrests-20180204-story.html). Zhang and co-author Gale Holland made their work avaialble via GitHub as -- you guessed it! -- a [notebook](https://github.com/datadesk/homeless-arrests-analysis/blob/master/analysis.ipynb).\n\nBut Zhang notes that the *Source* item is not a \"how we crunched the numbers\" post -- the Notebook covers the technical end. \"Instead,\" she writes, \"I'll tell you all about how we got the numbers, how we vetted the numbers, and, most importantly, how we found the story behind -- and beyond -- the numbers. It's the more complicated behind-the-scenes story, but it’s also (I hope) the more interesting one, because the data itself can only take you so far.\"","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"239639","input":"Jupyter also maximizes portability by offering more sharing/distribution options. From the File menu in the notebook interface, you can export an entire notebook into several different filetypes:\n\n![save-as.png](saveas.png)\n","pos":21,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"43fd5b","input":"### But there is another reason...\n\nGalileo documented observations about Jupiter's moons and published them in Sidereus Nuncius (Starry Messenger), a pamphlet, in 1610. This was the first published astronomy paper that used observations using a telescope, which implicitly (but not explicitly) proved the Copernican system of a sun, not the Earth, which other celestial bodies revolved around.\n<br />\n> *\"I therefore concluded and decided unhesitatingly, that there are three stars in the heavens moving about Jupiter, as Venus and Mercury round the Sun; which at length was established as clear as daylight by numerous subsequent observations. These observations also established that there are not only three, but four, erratic sidereal bodies performing their revolutions round Jupiter...the revolutions are so swift that an observer may generally get differences of position every hour.\"*\n>\n> Galileo Galilei\n\n<br />\n<img src=\"http://upload.wikimedia.org/wikipedia/commons/d/d0/Sidereus_Nuncius_Medicean_Stars.jpg\">\n<br />\n<center>Image courtesy of the History of Science Collections, University of Oklahoma Libraries.</center>\n\nSharing these observations and conclusions in a way that can be replicated and verified inspired the modern scientific method. This is the essence of a Jupyter Notebook: sharing a complete process with others to verify and replicate results.","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"49dd11","input":"### Why is it called Jupyter?\n\nOriginally called ``IPython``, the project provided an enhanced command-line console to run your ``Python`` code interactively.\n\n``Jupyter Notebooks`` are a newer, more sophisticated alternative to ``IPython`` that moves toward platform with multiple languages.\n\nIn Jupyter, \"Notebooks\" denote documents that contain both computer code and rich text elements such as:\n* paragraphs, \n* figures, \n* links, \n* and equations,\n\nmaking them both human-readable documents as well as executable code documents to perform data analysis.\n\n### *JU*lia + *PY*Thon + *R* = JUPYTER\n\nThis is not to indicate that Jupyter only supports these languages... The complete list has more than [100 different languages](https://github.com/jupyter/jupyter/wiki/Jupyter-kernels), making it largely **language-agnostic**.","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5a8ed1","input":"And, naturally, defining functions! The code below defines a Python function to find the circumference of a circle with a radius of *r*:","pos":14,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"6a412a","input":"## Running Code in a Notebook\n\n*Note: the examples used here are Python. If you need a refresher on Python or are completely new to it, there are literally a metric ton of them out there to get you started! In fact, you will practice **Python** later.\n\nLet's try a simple \"Hello, World\" command using the `print` function. Click on the cell below to highlight it, then click the Run button on the toolbar.","pos":8,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"735939","input":"What's happening? Well, the structure of a Notebook is a series of **cells**, not unlike a single-column spreadsheet.\n\nEach cell has (primarily) one of two functions: \n* **running code** \n* and **displaying text**.\n\nWhen you double-clicked the text, what you actually saw is the underlying, encoded text inside that cell. It's actually a type of encoding called [Markdown](https://www.howtogeek.com/448323/what-is-markdown-and-how-do-you-use-it/). You might be familiar with Markdown if you've ever used Github or Jekyll -- it's a simple way to format text like *italicizing* (which is coded as ```*italicizing*```) or ~~scratched text~~ (which is coded as ```~~scratched text~~```). A good list of Markdown coding can be found [here](https://github.com/TwistedHardware/mltutorial/blob/master/notebooks/jupyter/2.%20Markdown%20%26%20LaTeX.ipynb).\n\nBecause Jupyter is used for displaying code and skews heavily toward math and statistics, they've also included [LaTeX](https://en.wikibooks.org/wiki/LaTeX/Mathematics), which is coding to show mathematical formulas such as:\n<br />\n<center>$y = x^2$</center>\n<br />\n<center>which is coded as</center>\n<br />\n<center>```$y = x^2$```</center>\n<br />\nYou can always change the mode of the cell in the toolbar above the notebook:\n\n![mode.png](mode.png)","pos":7,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"7823a9","input":"What happened there? Well, if you got an error, is because the library *unidecode* isn't installed. In these instances, you will need to arrange to have libraries installed into the Notebook itself:","pos":18,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"7a503b","input":"# Exploring Cells\n\n> Go ahead and double click this text to see what happens!!!!!!!\n\n","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"877adb","input":"# Lesson 0: The Absolute Basics of Jupyter Notebooks\n\nBy Scott Carlson, with acknowledgement to the work of [Abdullah Alrasheed](https://github.com/TwistedHardware/mltutorial) and his gracious GNU License.\n\nThe purpose of this Notebook is to familairize you with the basics of **Jupyter Notebooks**.","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"9c5c1c","input":"> What happened? \n\nHopefully you will see this:\n\n![image1](celula.png)","pos":6,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"ae83b3","input":"### JSON and Jupyter\n\nJupyter saves notebooks as files with the **.ipynb extension**. This notebook file is really just a plain text file storing [JSON](https://www.oracle.com/database/what-is-json/) data:\n\n```\n{\n \"cells\": [\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"# IPython 3 (jupyter)\\n\",\n    \"\\n\",\n    \"**Video Toturial:** https://www.youtube.com/user/roshanRush\\n\",\n    \"\\n\",\n    \"Jupyter is an web-based interactive development environment. It support multiple programming languages like Julia, Octave, Python and R (In alphabetical order).\"\n   ]...\n```\n### The Kernel\n\nA **kernel** is the process running the Notebook file session, and covers the code language (Python, R, etc). The kernel receives your bits of code from the Notebook, executes them, and sends the outputs and possible errors back to the  interface.\n<br />\n![notebook_components.png](notebook.png)\n<br />\n\n---\n\n<div class=\"alert alert-block alert-info\">\n<b>NOTE</b> A notebook is persistent (because it's a file), whereas a kernel may be closed at the end of an interactive session and it is therefore not persistent. When a notebook is re-opened, it needs to be re-executed.\n</div>\n\n---\n\nThe Jupyter Dashboard contains several tabs covering these concepts:\n- Files: shows all files and notebooks in the current directory\n- Running: shows all kernels currently running on your computer\n- Clusters: lets you launch kernels for parallel computing","pos":4,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c35202","input":"##  Introduction\nJupyter is an web-based, interactive development environment. It supports multiple programming languages like Julia, Python and R (in alphabetical order).\n\n<img src=\"https://kenophobio.github.io/images/jupyter-main-logo.png\" style=\"width:50%; height:50%\">","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"ee92f4","input":"#  Advantages of Jupyter Notebooks\n\nNotebooks are a great way to both distribute results and verify that the data analysis methods work. Take, for example, [this *Nature* article](https://www.nature.com/articles/nmicrobiol2016177) that dog and human instances of inflammatory bowel disease rely on overlapping, yet distinct networks of microbial imbalance. The authors made the Notebooks (and most of the data) used to generate the results available [here](https://github.com/ElDeveloper/dogs).\n\nBut it's also great for teaching people how to use coding software, such as the underlying Kernels, as well as features of software. For example, [this notebook](http://nbviewer.jupyter.org/github/jiffyclub/ipythonblocks/blob/master/demos/starry_night_to_text.ipynb) teaches users how to use the Python library [iPythonblocks](https://github.com/jiffyclub/ipythonblocks) to change images to text files containing data, like van Gough's Starry Night:\n\n![starry-night.png](starrynight.png)\n![starry-night2.png](star2.png)","pos":22,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f105cf","input":"And, just like any `Python interpreter`, you can call libraries! But beware, even though Anaconda's Jupyter distribution comes bundled with a ton of stuff pertinent to data science and stats, not everything comes with it. If you hope to distribute or review a Notebook, make sure you have all the libraries you need installed. In the below example, we want to use a Python library to swap out the diacritic in the name **Boris Villazón** using the *unidecode* library:","pos":16,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f1ea11","input":"![interp2.png](more.png)\n\n\nYou can do for loops too:","pos":12,"state":"done","type":"cell"}
{"id":0,"time":1724680341590,"type":"user"}
{"last_load":1724680623698,"type":"file"}